\input{regression-test.tex}
% The language names are seen in this order by babel, cleveref and xcref.
% Alternatively, one could use \xcrefusemodules for xcref.
\documentclass[ngerman,french]{report}
\usepackage{lmodern}
\usepackage[T1]{fontenc}
\usepackage[utf8]{inputenc}
\usepackage{babel}
\usepackage{xcolor}
\usepackage{xparse}
% amsthm and ntheorem fix a nasty problem with LaTeX's standard \newtheorem
% command
% (cf. <https://tex.stackexchange.com/questions/19104/cleveref-with-counters-with-same-name>).
% In short, with LaTeX's standard \newtheorem command and a setup such as
% \newtheorem{satz}[problem]{Satz}, labels inside 'satz' environments have the
% type 'problem', which essentially ruins our efforts.
\usepackage{amsthm}
\usepackage{cleveref}

\definecolor{NameColor}{HTML}{CA1640}

\newtheorem{theorem}{Théorème}

\newtheorem{foobar}{Foobar}
\creflabelformat{foobar}{#2(#1)#3}

\newtheorem{langtest}{Language test}

\START
\usepackage{xcref}

\let\fxcref=\xcreffrenchwrapper
\let\fXcref=\xcreffrenchWrapper

% The use of NameColor is there to make sure that the following settings
% override the defaults.
\xcreffrenchSetNamesTableEntry{section}{\`a}{la}
                              {\ptextcolor{NameColor}{section}}
                              {\ptextcolor{NameColor}{sections}}
\xcreffrenchSetNamesTableEntry{equation}{dans}{l'}
                              {\ptextcolor{NameColor}{équation}}
                              {\ptextcolor{NameColor}{équations}}
\xcreffrenchSetNamesTableEntry{foobar}{d'apr\`es}{le}
                              {f\xcrefNoCaseChange{OO} bar}
                              {f\makeItBlue{OO} bars}
\xcreffrenchSetNamesTableEntry{langtest}{\`a}{le}
                              {ijklmnop}
                              {ijklmnop plural}

\xcrefngermanSetNamesTableEntry{section}{in}
  {{der}{Abschnitt}{die}{Abschnitte}}
  {{den}{Abschnitt}{die}{Abschnitte}}
  {{dem}{Abschnitt}{den}{Abschnitten}}
  {{des}{Abschnitts}{der}{Abschnitte}} % “des Abschnittes” is also possible

% We'll take care of \makeItBlue later
\xcrefset{%
  functions for preventing auto case change = {\xcrefNoCaseChange\ptextcolor}
}

\ExplSyntaxOn

\OMIT

% \protected wrapper for \textcolor
\NewDocumentCommand \ptextcolor { m }
  {
    \textcolor {#1}
  }

\NewDocumentCommand \makeItBlue { }
  {
    \ptextcolor { blue }
  }

\NewDocumentCommand \cs { m }
  {
    \texttt
      {
        \char_generate:nn { `\\ } { 12 }
        \tl_to_str:n {#1}
      }
  }

% Convenience macros to allow using \cs inside sectioning commands without
% upsetting hyperref.
%
% When loaded, hyperref defines this command.
\ProvideDocumentCommand \texorpdfstring { m m }
  {
    #1
  }

\tl_new:N \g__xcref_test_dumbsectioningcmd_tl

\cs_new_protected:Npn \__xcref_test_dumbsectioningcmd_aux:nnn #1#2#3
  {
    \use:c {#1} { \texorpdfstring {#2} {#3} }
  }

\cs_generate_variant:Nn \__xcref_test_dumbsectioningcmd_aux:nnn { nnV }

% #1: section, chapter, etc.
% #2: the title; it should be suitable for use inside \edef (expandable)
%     with the exception of possible \cs or \xcrefPGFOpt calls, which we are
%     precisely going to take care of.
%
% There is no support for the optional argument of the sectioning command
% nor for the star variant (this command is only for PDF output of test
% “documents” such as this one, that basically no one will look at).
\cs_new_protected:Npn \__xcref_test_dumbsectioningcmd:nn #1#2
  {
    \group_begin:
      \def \cs ##1
        {
          \exp_not:n { \textbackslash }
          \tl_to_str:n {##1}
        }
      \def \xcrefPGFOpt ##1
        {
          \exp_not:n { \texttt { /xcref/##1 } }
        }
      \tl_gset:Nx \g__xcref_test_dumbsectioningcmd_tl { #2 }
    \group_end:

    \__xcref_test_dumbsectioningcmd_aux:nnV {#1} {#2}
      \g__xcref_test_dumbsectioningcmd_tl
  }

% Takes two arguments (first: 'section', 'chapter', etc., second: the title)
\NewDocumentCommand \dumbsectioningcmd { }
  {
    \__xcref_test_dumbsectioningcmd:nn
  }

% Takes one argument: the section title
\NewDocumentCommand \dumbsection { }
  {
    \__xcref_test_dumbsectioningcmd:nn { section }
  }

\NewDocumentCommand \xcrefPGFOpt { m }
  { \texttt{/xcref/#1} }
\NewDocumentCommand \xcrefPGFPath { m } % for PGF “directories”
  { \texttt{/xcref/#1} }
\NewDocumentCommand \xcrefPGFRoot { }
  { \texttt{/xcref} }

\cs_set_protected:Npn \test:n #1
  {
    \hbox_set:Nn \l_tmpa_box {#1}
    \box_show:N \l_tmpa_box
    \OMIT
     % Make it easier to validate the saved result by inspecting the PDF output
    \box_use_drop:N \l_tmpa_box
    \TIMO
  }

\ExplSyntaxOff

\begin{document}

\chapter{Material used in the tests}

\section{A first section}
\label{sec-1}

Equation:\setcounter{equation}{11}%
\begin{equation}
  \label{eq-famous-constants}
  e^{i\pi} = -1
\end{equation}

\begin{foobar}
  \label{foobar-1}
  This result is notoriously foobar.
\end{foobar}

\section{A second section}
\label{sec-2}

\begin{foobar}
  \label{foobar-2}
  Blah.
\end{foobar}

\section{A third section}
\label{sec-3}

\begin{theorem}
  \label{theorem-1}
  Some theorem.
\end{theorem}

\begin{theorem}
  \label{theorem-2}
  Other theorem.
\end{theorem}

\section{A fourth section}
\label{sec-4}

\begin{theorem}
  \label{theorem-3}
  Third theorem.
\end{theorem}

\begin{theorem}
  \label{theorem-4}
  Fourth theorem.
\end{theorem}

\begin{langtest}
  \label{language-test}
  This is used to test \xcrefPGFOpt{lang for capitalization func}.
\end{langtest}

\chapter{The tests}

\dumbsection{Basic tests with \cs{xcref}, \cs{xcreffrenchwrapper}
  and \cs{xcreffrenchWrapper}}
\ExplSyntaxOn
\TIMO

\TEST { \xcref with~capitalize=false }
  {
    \test:n { \xcref[capitalize=false]{sec-1} }
  }

\TEST { \fxcref with~no~optional~argument }
  {
    \test:n { \fxcref{sec-1} }
  }

\TEST { \xcref with~capitalize=true~(acts~on~a~with~grave~accent) }
  {
    \test:n { \xcref[capitalize=true]{sec-1} }
  }

\TEST { \xcref with~capitalize~(acts~on~a~with~grave~accent) }
  {
    \test:n { \xcref[capitalize]{sec-1} }
  }

\TEST { \fXcref with~no~optional~argument }
  {
    \test:n { \fXcref{sec-1} }
  }

\TEST { \xcref with~no~optional~argument,~two~section~refs }
  {
    \test:n { \xcref{sec-1,sec-2} }
  }

\TEST { \xcref with~no~optional~argument,~three~consecutive~section~refs }
  {
    \test:n { \xcref{sec-1,sec-2,sec-3} }
  }

\TEST { \xcref with~no~optional~argument,~three~non~consecutive~section~refs }
  {
    \test:n { \xcref{sec-1,sec-2,sec-4} }
  }

\TEST { \fxcref with~a~section~and~an~equation~(1) }
  {
    \test:n { \fxcref{sec-1,eq-famous-constants} }
  }

\TEST { \fxcref with~a~section~and~an~equation~(2) }
  {
    \test:n { \fxcref{sec-1}~et~
              \fxcref[preposition=avec]{eq-famous-constants} }
  }

\OMIT
\ExplSyntaxOff
\dumbsection{Test \xcrefPGFOpt{functions for preventing auto case change}}
\ExplSyntaxOn
\TIMO

\TEST { functions~for~preventing~auto~case~change~(1) }
  {
    \xcrefset { functions~for~preventing~auto~case~change = { } }
    \test:n
      {
        \fxcref[preposition=d'après]{foobar-1},~ \fXcref[form=noun]{foobar-1},~
        \fXcref[form=noun]{foobar-1,foobar-2}
      }
  }

\TEST { functions~for~preventing~auto~case~change~(2) }
  {
    % Use the setting we did in the preamble, which is
    % functions~for~preventing~auto~case~change={\xcrefNoCaseChange\ptextcolor}
    \test:n
      {
        \fxcref[preposition=d'après]{foobar-1},~ \fXcref[form=noun]{foobar-1},~
        \fXcref[form=noun]{foobar-1,foobar-2}
      }
  }

\TEST { functions~for~preventing~auto~case~change~(3) }
  {
    \xcrefset
      {
        functions~for~preventing~auto~case~change = { \xcrefNoCaseChange
                                                      \makeItBlue }
      }
    \test:n
      {
        \fxcref[preposition=d'après]{foobar-1},~ \fXcref[form=noun]{foobar-1},~
        \fXcref[form=noun]{foobar-1,foobar-2}
      }
  }

\OMIT
\ExplSyntaxOff
\dumbsection{Test \xcrefPGFOpt{capitalize}, \xcrefPGFOpt{french/form} and
  \xcrefPGFOpt{french/preposition}}
\ExplSyntaxOn
\TIMO

\TEST { \fxcref with~form=noun~(one~ref)}
  {
    \test:n { \fxcref[form=noun]{theorem-1} }
  }

\TEST { \fxcref with~form=article+noun~(one~ref) }
  {
    \test:n { \fxcref[form=article+noun]{theorem-1} }
  }

\TEST { \fxcref with~form=prep+article+noun~(one~ref) }
  {
    \test:n { \fxcref{theorem-1}~---~
              \fxcref[form=prep+article+noun]{theorem-1} }
  }

\TEST { \fxcref with~form=noun~(two~refs) }
  {
    \test:n { \fxcref[form=noun]{theorem-1,theorem-2} }
  }

\TEST { \fxcref with~form=article+noun~(two~refs) }
  {
    \test:n { \fxcref[form=article+noun]{theorem-1,theorem-2} }
  }

\TEST { \fxcref with~form=prep+article+noun~(two~refs) }
  {
    \test:n { \fxcref{theorem-1,theorem-2}~---~
              \fxcref[form=prep+article+noun]{theorem-1,theorem-2} }
  }

\TEST { \fxcref with~form=noun~(three~consecutive~refs) }
  {
    \test:n { \fxcref[form=noun]{theorem-1,theorem-2,theorem-3} }
  }

\TEST { \fxcref with~form=article+noun~(three~consecutive~refs) }
  {
    \test:n { \fxcref[form=article+noun]{theorem-1,theorem-2,theorem-3} }
  }

\TEST { \fxcref with~form=prep+article+noun~(three~consecutive~refs) }
  {
    \test:n { \fxcref{theorem-1,theorem-2,theorem-3}~---~
              \fxcref[form=prep+article+noun]{theorem-1,theorem-2,theorem-3} }
  }

\TEST { \fxcref with~form=noun~(three~non-consecutive~refs) }
  {
    \test:n { \fxcref[form=noun]{theorem-1,theorem-2,theorem-4} }
  }

\TEST { \fxcref with~form=article+noun~(three~non-consecutive~refs) }
  {
    \test:n { \fxcref[form=article+noun]{theorem-1,theorem-2,theorem-4} }
  }

\TEST { \fxcref with~form=prep+article+noun~(three~non-consecutive~refs) }
  {
    \test:n { \fxcref{theorem-1,theorem-2,theorem-4}~---~
              \fxcref[form=prep+article+noun]{theorem-1,theorem-2,theorem-4} }
  }

\TEST { \fxcref with~form=noun~(three~refs~of~mixed~types) }
  {
    \test:n { \fxcref[form=noun]{sec-3,theorem-2,theorem-4} }
  }

\TEST { \fxcref with~form=article+noun~(three~refs~of~mixed~types) }
  {
    \test:n { \fxcref[form=article+noun]{sec-3,theorem-2,theorem-4} }
  }

\TEST { \fxcref with~form=prep+article+noun~(three~refs~of~mixed~types) }
  {
    \test:n { \fxcref{sec-3,theorem-2,theorem-4}~---~
              \fxcref[form=prep+article+noun]{sec-3,theorem-2,theorem-4} }
  }

\TEST { \fxcref with~a~preposition~specified~in~UTF-8,~used~for~mixed~refs }
  {
    \test:n { \fxcref[preposition=d'après]{sec-3,theorem-2,theorem-4} }
  }

\TEST { \fxcref with~a~preposition~specified~in~UTF-8~(variant) }
  {
    \test:n { \fxcref[preposition=d'après]{sec-3}~et~
              \fxcref[form=article+noun]{theorem-2,theorem-4} }
  }

\TEST { \fXcref with~a~preposition~specified~in~UTF-8 }
  {
    \test:n { \fXcref[preposition=d'après]{sec-3}~et~
              \fxcref[form=article+noun]{theorem-2,theorem-4} }
  }

\TEST { \fxcref in~the~scope~of~\xcrefset {~french/form~=~noun~} }
  {
    \xcrefset { french/form = noun }
    \test:n { voir~\fxcref{sec-3}~et~\fxcref{theorem-2,theorem-4} }
  }

\OMIT
\ExplSyntaxOff
\section{Test generic language-related options}
\ExplSyntaxOn
\TIMO

\TEST { \xcrefPGFOpt{lang}~passed~to~\xcref }
  {
    \OMIT
    \begin{otherlanguage}{ngerman}
    \TIMO
    \test:n
      {
        \xcref[lang=ngerman, ngerman/form=article+noun,
               ngerman/case=nom]{sec-1}~---~
        \xcref[lang=ngerman, ngerman/form=article+noun,
               ngerman/case=nom]{sec-1,sec-2,sec-4}
      }
    \OMIT
    \end{otherlanguage}
    \TIMO
  }

\TEST { \xcrefPGFOpt{lang}~passed~to~\xcrefset~and~switch~back~to~main~language }
  {
    \OMIT
    \begin{otherlanguage}{ngerman}
    \TIMO
      \test:n
        {
          \xcrefset{lang=ngerman}
          \xcref[ngerman/form=prep+article+noun, ngerman/preposition=in,
                 ngerman/case=dat]{sec-1}~---~
          \xcref[ngerman/form=prep+article+noun, ngerman/preposition=in,
                 ngerman/case=dat]{sec-1,sec-2,sec-4}
        }
    \OMIT
    \end{otherlanguage}
    \TIMO

    % Back to French
    \test:n { \xcref{sec-1} }
  }

\TEST { Test~for~\xcrefPGFOpt{lang~for~capitalization~func} }
  {
    \OMIT
    \cs_new:Npn \xcref_test_map_func:n #1
      {
        % When \tl_mixed_case:nn is passed the 'nl' language, “ij” gets
        % capitalized as “IJ”. So, let's artificially map 'french' to 'nl'
        % via '/xcref/lang for capitalization func' in order to test it.
        \str_if_eq:nnTF {#1} { french } { nl } { }
      }
    \TIMO

    \xcrefset { french/form = noun }
    \group_begin:
      \xcrefset { lang~for~capitalization~func = \xcref_test_map_func:n }
      \test:n { \fxcref{language-test}~---~\fXcref{language-test} }
    \group_end:
    % The 'french -> nl' mapping is not effective anymore here.
    \test:n { \fxcref{language-test}~---~\fXcref{language-test} }
  }

\OMIT
% Without \ExplSyntaxOff here, one may get “LaTeX Warning: Label(s) may have
% changed. Rerun to get cross-references right.” I believe this happens when
% hyperref is used.
\ExplSyntaxOff
\end{document}
